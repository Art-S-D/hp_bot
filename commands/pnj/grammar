{
  function makeInteger(o) {
    return parseInt(o.join(""), 10);
  }
  function merge_objects(array){
  	return array.reduce((accum, current) => {return{...accum, ...current}}, {})
  }
  const pnjAction={
    get:1,
    update:2,
    remove:3,
    add:4,
    list:5,
  }
}

pnj = "!pnj" " "+ res:(addPnj  / listPnj / removePnj / updatePnj / getPnj) {return res}

number = sign:("+"/"-"/"") nb:[0-9]+ {let i = makeInteger(nb); return sign==="-"?-i:i}
word= w:([a-zA-Z]+) {return w.join("")}
phrase = p:([a-zA-Zéèùà\[\].?!\-'] / " ")* {return p.join("").replace(/-/g,"\n")}

year = ("A" nb:number{return nb}) / ("A"{return 0})

pnjName = name:word "[" house:word "." y:year "]" {return {name, house, year:y}}


getPnj = p:pnjName {return {type: pnjAction.get, pnj: p }}
addPnj = "add" " "+ p:pnjName " "* description:phrase " "*
	{return {type: pnjAction.add, pnj: p, description}}
listPnj = "list" " "* {return {type:pnjAction.list}}
removePnj = "remove" " "+ p:pnjName " "* { return {type: pnjAction.remove, pnj: p}}


updateInstruction =
set:(
	("name" " "+ name:word {return {name}}) /
  ("year" " "+ year:number {return{year}}) /
	("house" " "+ house:word {return {house}}) /
  ("description" " "+ description:phrase {return{description}}) /
	(" "+ {return {}})
)*
{return merge_objects(set)}

updatePnj = "update" " "+ name:pnjName set:(" "+ "set" " "+ set:updateInstruction {return set})? " "*
	{return {type:pnjAction.update, pnj:name, set}}