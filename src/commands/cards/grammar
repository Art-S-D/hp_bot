{
  function makeInteger(o) {
    return parseInt(o.join(""), 10);
  }
  function merge_objects(array){
  	return array.reduce((accum, current) => {return{...accum, ...current}}, {})
  }
  const cardType={
    random:0,
    name: 1,
    category: 2,
    collection: 3,
    remove: 4
  }
}

card = "!card" " "+ res:(random / name / category / collection / remove) " "*
	{return res}

unumber = nb:[0-9]+ {return makeInteger(nb)}
number = sign:("+"/"-"/"") nb:[0-9]+ {let i = makeInteger(nb); return sign==="-"?-i:i}
word= w:([a-zA-Z]+) {return w.join("")}
phrase = p:(.)* {return p.join("").replace(/-/g,"\n")}

multiplier = "x" n:number {return n}
optionalMultiplier = mult:((m:multiplier " "+{return m}) / (""{return 1}))
  {return mult}

random = mult:optionalMultiplier "random"
	{return {type: cardType.random, multiplier: mult}}
name = mult:optionalMultiplier "name" " "+ p:phrase
	{return {type: cardType.name, name:p, multiplier: mult}}
category = mult:optionalMultiplier ("categorie"/"cat√©gorie"/"category") " "+ cat:("R" / "C" / "L")
	{return {type:cardType.category, category: cat, multiplier: mult}}
collection = "collection" {return {type:cardType.collection}}
remove = "remove" " "+ p:phrase
	{return {type:cardType.remove, name:p, multiplier: mult}}